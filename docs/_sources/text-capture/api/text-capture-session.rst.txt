Text Capture Session
=======================

.. module:: scandit.datacapture.text
  :android-package: com.scandit.datacapture.text.capture

.. class:: TextCaptureSession
  @objc@ SDCTextCaptureSession : NSObject
  :available: android=6.1, ios=6.1

  The text capture session is responsible for determining the list of *relevant* texts by filtering out duplicates. This filtering of duplicates is completely time-based and doesn't use any information about the location of the text. By default, all the texts captured in a frame are always reported. It is possible to filter out texts recently captured by changing :prop:`TextCaptureSettings.DuplicateFilter`.

  When :prop:`the text capture mode is disabled<core.IDataCaptureMode.IsEnabled>`, the session's duplicate filter is reset.

  The text capture session should only be accessed from within the callbacks to which it is provided as an argument. It is not safe to be accessed from anywhere else since it may be concurrently modified. However, the texts returned by the session can be used outside the callbacks.

  .. property:: IList<CapturedText> NewlyCapturedTexts { get; }
    :available: android=6.1, ios=6.1

    List of texts that were newly captured in the last processed frame.

  .. method:: void Reset()
    :available: none

    Reset the text capture session, effectively clearing the history of captured texts. This affects duplicate filtering: when calling :meth:`Reset` every frame this has the same effect as setting the :prop:`TextCaptureSettings.DuplicateFilter` to 0.

  .. property:: long FrameSequenceId { get; }
    @objc@ @property (nonatomic, readonly) NSInteger frameSequenceId
    :available: ios=6.1, android=6.1

    The identifier of the current frame sequence.

    .. important::
     As long as there is no interruptions of frames coming from the camera, the :prop:`TextCaptureSession.FrameSequenceId` will stay the same.
